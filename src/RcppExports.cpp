// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_park_search
Rcpp::DataFrame rcpp_park_search(const Rcpp::DataFrame graph, const Rcpp::List edge_map_in, const Rcpp::List edge_map_rev_in, const double prop_full, const int start_edge, const int ntrials);
RcppExport SEXP _superblock_rcpp_park_search(SEXP graphSEXP, SEXP edge_map_inSEXP, SEXP edge_map_rev_inSEXP, SEXP prop_fullSEXP, SEXP start_edgeSEXP, SEXP ntrialsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type graph(graphSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type edge_map_in(edge_map_inSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type edge_map_rev_in(edge_map_rev_inSEXP);
    Rcpp::traits::input_parameter< const double >::type prop_full(prop_fullSEXP);
    Rcpp::traits::input_parameter< const int >::type start_edge(start_edgeSEXP);
    Rcpp::traits::input_parameter< const int >::type ntrials(ntrialsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_park_search(graph, edge_map_in, edge_map_rev_in, prop_full, start_edge, ntrials));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_park_fill
Rcpp::NumericVector rcpp_park_fill(const Rcpp::DataFrame graph, const Rcpp::List edge_map_in, const Rcpp::List edge_map_rev_in, const double prop_full, const int ntrials, const int n_unfilled);
RcppExport SEXP _superblock_rcpp_park_fill(SEXP graphSEXP, SEXP edge_map_inSEXP, SEXP edge_map_rev_inSEXP, SEXP prop_fullSEXP, SEXP ntrialsSEXP, SEXP n_unfilledSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type graph(graphSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type edge_map_in(edge_map_inSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type edge_map_rev_in(edge_map_rev_inSEXP);
    Rcpp::traits::input_parameter< const double >::type prop_full(prop_fullSEXP);
    Rcpp::traits::input_parameter< const int >::type ntrials(ntrialsSEXP);
    Rcpp::traits::input_parameter< const int >::type n_unfilled(n_unfilledSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_park_fill(graph, edge_map_in, edge_map_rev_in, prop_full, ntrials, n_unfilled));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_superblock_rcpp_park_search", (DL_FUNC) &_superblock_rcpp_park_search, 6},
    {"_superblock_rcpp_park_fill", (DL_FUNC) &_superblock_rcpp_park_fill, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_superblock(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
